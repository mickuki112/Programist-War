{"ast":null,"code":"import _objectSpread from \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js\";\nimport React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [{\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }],\n      cardOpponent: [{\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }]\n    };\n    this.game = {\n      hoverCard: false,\n      fieldPlayed: false,\n      field: [false, false, false, false, false, false, false, false, false, false]\n    };\n\n    this.action = () => {\n      this.setState({\n        cards: [{\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }],\n        cardOpponent: [{\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }, {\n          position: 20\n        }]\n      });\n    };\n\n    this.playTheCard = id => {\n      this.game.field[id] = true;\n      this.game.fieldPlayed = id;\n\n      const arayCards = _objectSpread({}, this.state);\n\n      arayCards.cards[this.game.hoverCard].position = id;\n      this.setState(_objectSpread({}, arayCards));\n    };\n\n    this.hoverCard = id => {\n      this.game.hoverCard = id;\n    };\n\n    this.tableNuber = position => {\n      if (position < 5) return 5;else return 10;\n    };\n  }\n\n  render() {\n    const card = this.state.cards.map((counter, i) => {\n      const lenght = this.state.cards.length;\n      let styleCard = null;\n\n      if (counter.position == 20) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + (155 + math.abs(i - lenght / 2) * (70 / lenght)) + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      } else if (counter.position >= 0 && 10 <= counter.position) {\n        alert();\n        styleCard = {\n          transform: \"translate3d(-\" + (326 + 76 * (this.tableNuber(counter.position) - counter.position)) + \"%,\" + (34 + (this.tableNuber(counter.position) - 5) * 11.5) + \"%,\" + (i + 5) + \"px) rotate(0deg) scale(0.5)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    });\n    const cardOpponent = this.state.cardOpponent.map((counter, i) => {\n      const lenght = this.state.cardOpponent.length;\n      let styleCard = null;\n\n      if (counter.position) {\n        styleCard = {\n          transform: \"translate3d(-\" + (i * (300 / lenght) + 400) + \"%,\" + (-160 - math.abs(i - lenght / 2) * (70 / lenght)) + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      if (counter.position > 1) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + -300 + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.GameDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, cardOpponent, React.createElement(Table, {\n      clicked: this.playTheCard,\n      field: this.game.field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), card, React.createElement(\"button\", {\n      onClick: this.action,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Start Game\"));\n  }\n\n}\n\nexport default Builder;","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js"],"names":["React","Component","Cards","styles","math","Table","Builder","state","cards","position","cardOpponent","game","hoverCard","fieldPlayed","field","action","setState","playTheCard","id","arayCards","tableNuber","render","card","map","counter","i","lenght","length","styleCard","transform","abs","alert","GameDiv"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\nclass Builder extends Component{\n    state={\n        cards:[{position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n                {position:false},\n                {position:false},\n                {position:false},\n                {position:false},\n                {position:false}],\n        cardOpponent:[{position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n                {position:false},\n                {position:false},\n                {position:false},\n                {position:false},\n                {position:false}]\n    }\n    game={\n        hoverCard:false,\n        fieldPlayed:false,\n        field:[false,false,false,false,false,false,false,false,false,false],\n    }\n    action=()=>{\n        this.setState({\n            cards:[{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},],\n            cardOpponent:[{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},{position:20},]\n        });\n    }\n    playTheCard=(id)=>{\n        this.game.field[id]=true;\n        this.game.fieldPlayed=id;\n        const arayCards={...this.state}\n        arayCards.cards[this.game.hoverCard].position=id;\n        this.setState({...arayCards})\n    }\n    hoverCard=(id)=>{\n        this.game.hoverCard=id;\n    }\n    tableNuber=(position)=>{if(position<5)\n        return(5);\n    else\n        return(10);}\n    render(){\n        const card=this.state.cards.map((counter,i)=>{\n            const lenght=this.state.cards.length;\n            let styleCard=null;\n            if(counter.position==20){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(155+math.abs(i-lenght/2)*(70/lenght))+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }else\n            if(counter.position>=0 && 10<=counter.position){alert()\n                styleCard={transform:\"translate3d(-\"+(326+76*(this.tableNuber(counter.position)-counter.position))+\"%,\"+(34+(this.tableNuber(counter.position)-5)*11.5)+\"%,\"+(i+5)+\"px) rotate(0deg) scale(0.5)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard}/>\n        })\n\n\n        const cardOpponent=this.state.cardOpponent.map((counter,i)=>{\n            const lenght=this.state.cardOpponent.length;\n            let styleCard=null;\n            if(counter.position){\n                styleCard={transform:\"translate3d(-\"+(i*(300/lenght)+400)+\"%,\"+(-160-math.abs(i-lenght/2)*(70/lenght))+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            if(counter.position>1){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(-300)+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard}/>\n        })\n\n\n        return(\n            <div className={styles.GameDiv}>\n                {cardOpponent}\n            <Table clicked={this.playTheCard} field={this.game.field}/>\n                {card}\n                <button onClick={this.action}>Start Game</button>\n\n            </div>\n        );\n    }\n}\n\nexport default Builder;\n"]},"metadata":{},"sourceType":"module"}