{"ast":null,"code":"import _objectSpread from \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nconst initialState = {\n  results: [false, false, false, false, false, false, false, false, false, false],\n  cards: [{\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }],\n  cardOpponent: [{\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }, {\n    position: 19\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PLAY_THE_CARD':\n      const newResults = _objectSpread({}, state.results);\n\n      newResults[action.id] = action.val;\n      return _objectSpread({}, state, {\n        results: _objectSpread({}, newResults)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/store/reducers/table.js"],"names":["actionTypes","cardAttributes","initialState","results","cards","position","cardOpponent","reducer","state","action","type","newResults","id","val"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,OAAO,KAAKC,cAAZ,MAAgC,4CAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,CADQ;AAEjBC,EAAAA,KAAK,EAAC,CAAC;AAACC,IAAAA,QAAQ,EAAC;AAAV,GAAD,EACF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GADE,EAEF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAFE,EAGF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAHE,EAIF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAJE,EAKF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GALE,EAMF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GANE,EAOF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAPE,EAQF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GARE,EASF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GATE,EAUF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAVE,EAWF;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAXE,CAFW;AAcjBC,EAAAA,YAAY,EAAC,CAAC;AAACD,IAAAA,QAAQ,EAAC;AAAV,GAAD,EACT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GADS,EAET;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAFS,EAGT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAHS,EAIT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAJS,EAKT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GALS,EAMT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GANS,EAOT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAPS,EAQT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GARS,EAST;AAACA,IAAAA,QAAQ,EAAC;AAAV,GATS,EAUT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAVS,EAWT;AAACA,IAAAA,QAAQ,EAAC;AAAV,GAXS;AAdI,CAArB;;AA4BA,MAAME,OAAO,GAAG,CAAEC,KAAK,GAAGN,YAAV,EAAwBO,MAAxB,KAAmC;AAE/C,UAASA,MAAM,CAACC,IAAhB;AACI,SAAK,eAAL;AACA,YAAMC,UAAU,qBAAKH,KAAK,CAACL,OAAX,CAAhB;;AACAQ,MAAAA,UAAU,CAACF,MAAM,CAACG,EAAR,CAAV,GAAsBH,MAAM,CAACI,GAA7B;AACI,+BAAWL,KAAX;AACIL,QAAAA,OAAO,oBAAKQ,UAAL;AADX;;AAGJ;AACI,aAAOH,KAAP;AARR;AAUH,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\n\nconst initialState = {\n    results: [false,false,false,false,false,false,false,false,false,false],\n    cards:[{position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19}],\n    cardOpponent:[{position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19},\n        {position:19}]\n};\n\nconst reducer = ( state = initialState, action) => {\n\n    switch ( action.type ) {\n        case 'PLAY_THE_CARD':\n        const newResults={...state.results};\n        newResults[action.id]=action.val;\n            return {...state,\n                results:{...newResults},\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}