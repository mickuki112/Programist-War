{"ast":null,"code":"import _objectSpread from \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js\";\nimport React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nimport { connect } from 'react-redux';\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [{\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }],\n      cardOpponent: [{\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }, {\n        position: 19\n      }]\n    };\n    this.game = {\n      hoverCard: false,\n      fieldPlayed: false,\n      field: [false, false, false, false, false, false, false, false, false, false]\n    };\n\n    this.action = () => {\n      const newState = _objectSpread({}, this.props.state);\n\n      newState.cards.map(card => {\n        card.position = 30;\n      });\n      newState.cardOpponent.map(card => {\n        card.position = 30;\n      });\n      this.props.setState(_objectSpread({}, newState));\n    };\n\n    this.playTheCard = id => {\n      this.game.fieldPlayed = id;\n\n      const arayCards = _objectSpread({}, this.state);\n\n      arayCards.cards[this.game.hoverCard].position = id;\n      this.setState(_objectSpread({}, arayCards));\n    };\n\n    this.endTur = () => {\n      this.props.playTheCard(this.game.hoverCard, this.game.fieldPlayed);\n    };\n\n    this.hoverCard = id => {\n      this.game.hoverCard = id;\n    };\n\n    this.tableNuber = position => {\n      if (position < 5) return 5;else return 10;\n    };\n  }\n\n  render() {\n    const card = this.state.cards.map((counter, i) => {\n      const lenght = this.state.cards.length;\n      let styleCard = null;\n\n      if (counter.position == 30) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + (155 + math.abs(i - lenght / 2) * (70 / lenght)) + \"%,\" + (i + 30) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      } else if (counter.position >= 0 && 10 >= counter.position) {\n        styleCard = {\n          transform: \"translate3d(-\" + (326 + 76 * (this.tableNuber(counter.position) - counter.position)) + \"%,\" + (34 + (this.tableNuber(counter.position) - 5) * 11.5) + \"%,\" + (i + 5) + \"px) rotate(0deg) scale(0.5)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    });\n    const cardOpponent = this.state.cardOpponent.map((counter, i) => {\n      const lenght = this.state.cardOpponent.length;\n      let styleCard = null;\n\n      if (counter.position == 30) {\n        styleCard = {\n          transform: \"translate3d(-\" + (i * (300 / lenght) + 400) + \"%,\" + (-160 - math.abs(i - lenght / 2) * (70 / lenght)) + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      if (counter.position >= 0 && 10 >= counter.position) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + -300 + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.GameDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, cardOpponent, React.createElement(Table, {\n      clicked: this.playTheCard,\n      field: this.game.field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), card, React.createElement(\"button\", {\n      onClick: this.action,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Start Game\"), React.createElement(\"button\", {\n      onClick: this.endTur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"endTur\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allCards: state.table.allCards\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    playTheCard: (hoverCard, fieldPlayed) => dispatch({\n      type: 'PLAY_THE_CARD',\n      val: hoverCard,\n      id: fieldPlayed\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Builder);","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js"],"names":["React","Component","Cards","styles","math","Table","cardAttributes","connect","Builder","state","cards","position","cardOpponent","game","hoverCard","fieldPlayed","field","action","newState","props","map","card","setState","playTheCard","id","arayCards","endTur","tableNuber","render","counter","i","lenght","length","styleCard","transform","abs","GameDiv","mapStateToProps","allCards","table","mapDispatchToProps","dispatch","type","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nimport { connect } from 'react-redux';\n\n\nclass Builder extends Component{\n    state={\n        cards:[{position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19}],\n        cardOpponent:[{position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19}]\n    }\n    game={\n        hoverCard:false,\n        fieldPlayed:false,\n        field:[false,false,false,false,false,false,false,false,false,false],\n    }\n    action=()=>{\n        const newState={...this.props.state};\n        newState.cards.map((card)=>{\n            card.position=30;\n        });\n        newState.cardOpponent.map((card)=>{\n            card.position=30;\n        });\n        this.props.setState({...newState});\n    }\n    playTheCard=(id)=>{\n        this.game.fieldPlayed=id;\n        const arayCards={...this.state}\n        arayCards.cards[this.game.hoverCard].position=id;\n        this.setState({...arayCards})\n\n    }\n    endTur=()=>{\n\n        this.props.playTheCard(this.game.hoverCard,this.game.fieldPlayed);\n    }\n    hoverCard=(id)=>{\n        this.game.hoverCard=id;\n    }\n    tableNuber=(position)=>{if(position<5)\n        return(5);\n    else\n        return(10);}\n    render(){\n        const card=this.state.cards.map((counter,i)=>{\n            const lenght=this.state.cards.length;\n            let styleCard=null;\n            if(counter.position==30){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(155+math.abs(i-lenght/2)*(70/lenght))+\"%,\"+(i+30)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }else\n            if(counter.position>=0 && 10>=counter.position){\n                styleCard={transform:\"translate3d(-\"+(326+76*(this.tableNuber(counter.position)-counter.position))+\"%,\"+(34+(this.tableNuber(counter.position)-5)*11.5)+\"%,\"+(i+5)+\"px) rotate(0deg) scale(0.5)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard}/>\n        })\n\n\n        const cardOpponent=this.state.cardOpponent.map((counter,i)=>{\n            const lenght=this.state.cardOpponent.length;\n            let styleCard=null;\n            if(counter.position==30){\n                styleCard={transform:\"translate3d(-\"+(i*(300/lenght)+400)+\"%,\"+(-160-math.abs(i-lenght/2)*(70/lenght))+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            if(counter.position>=0 && 10>=counter.position){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(-300)+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard}/>\n        })\n\n\n        return(\n            <div className={styles.GameDiv}>\n                {cardOpponent}\n            <Table clicked={this.playTheCard} field={this.game.field}/>\n                {card}\n                <button onClick={this.action}>Start Game</button>\n                <button onClick={this.endTur}>endTur</button>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        allCards: state.table.allCards,\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        playTheCard: (hoverCard,fieldPlayed) => dispatch({type: 'PLAY_THE_CARD', val: hoverCard, id: fieldPlayed }),\n    }\n};\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(Builder);\n"]},"metadata":{},"sourceType":"module"}