{"ast":null,"code":"var _jsxFileName = \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js\";\nimport React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [{\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }, {\n        position: false\n      }]\n    };\n    this.game = {\n      hoverCard: false,\n      fieldPlayed: false\n    };\n\n    this.action = () => {\n      this.setState({\n        cards: [{\n          position: 1\n        }, {\n          position: 2\n        }, {\n          position: 1\n        }, {\n          position: 1\n        }, {\n          position: 1\n        }, {\n          position: 1\n        }]\n      });\n    };\n\n    this.playTheCard = () => {\n      this.game.fieldPlayed = id;\n    };\n\n    this.hoverCard = id => {\n      this.game.hoverCard = id;\n    };\n  }\n\n  render() {\n    const card = this.state.cards.map((counter, i) => {\n      const lenght = this.state.cards.length;\n      let styleCard = null;\n\n      if (counter.position) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + (-50 + math.abs(i - lenght / 2) * (70 / lenght)) + \"px,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      if (counter.position > 1) {\n        alert();\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + (-50 + math.abs(i - lenght / 2) * (70 / lenght)) + \"px,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.GameDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.action,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Start Game\"), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), card);\n  }\n\n}\n\nexport default Builder;","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js"],"names":["React","Component","Cards","styles","math","Table","Builder","state","cards","position","game","hoverCard","fieldPlayed","action","setState","playTheCard","id","render","card","map","counter","i","lenght","length","styleCard","transform","abs","alert","GameDiv"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\nclass Builder extends Component{\n    state={\n        cards:[{position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false},\n            {position:false}]\n    }\n    game={\n        hoverCard:false,\n        fieldPlayed:false,\n    }\n    action=()=>{\n        this.setState({\n            cards:[{position:1},{position:2},{position:1},{position:1},{position:1},{position:1},]\n        });\n    }\n    playTheCard=()=>{\n        this.game.fieldPlayed=id;\n    }\n    hoverCard=(id)=>{\n        this.game.hoverCard=id;\n    }\n    render(){\n        const card=this.state.cards.map((counter,i)=>{\n            const lenght=this.state.cards.length;\n            let styleCard=null;\n            if(counter.position){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(-50+math.abs(i-lenght/2)*(70/lenght))+\"px,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            if(counter.position>1){alert()\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(-50+math.abs(i-lenght/2)*(70/lenght))+\"px,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard}/>\n        })\n        return(\n            <div className={styles.GameDiv}>\n            <button onClick={this.action}>Start Game</button>\n            <Table/>\n                {card}\n            </div>\n        );\n    }\n}\n\nexport default Builder;\n"]},"metadata":{},"sourceType":"module"}