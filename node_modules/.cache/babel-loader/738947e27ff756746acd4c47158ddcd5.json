{"ast":null,"code":"import _objectSpread from \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nconst initialState = {\n  results: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n  allCards: {\n    cards: [{\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }],\n    cardOpponent: [{\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }]\n  }\n};\n\nconst attack = (direction, attack1, attack2) => {\n  if (attack2) {} else {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PLAY_THE_CARD':\n      const newResults = _objectSpread({}, state.results);\n\n      const newAllCards = _objectSpread({}, state.allCards);\n\n      newResults[action.id] = action.val;\n      newAllCards.cards[action.val].position = action.id;\n      return _objectSpread({}, state, {\n        results: _objectSpread({}, newResults),\n        allCards: _objectSpread({}, newAllCards)\n      });\n\n    case 'GIVEAWAYTHECARS':\n      const newState = _objectSpread({}, state.allCards);\n\n      newState.cards.map(card => {\n        card.position = 30;\n        card.value = _objectSpread({}, cardAttributes.PIXEL); //do zmiany\n      });\n      newState.cardOpponent.map(card => {\n        card.position = 30;\n      });\n      return _objectSpread({}, state, {\n        allCards: _objectSpread({}, newState)\n      });\n\n    case 'ENDTURN':\n      const newAllCards1 = _objectSpread({}, state.allCards);\n\n      const i = 0;\n\n      if (state.results[i]) {\n        if (state.results[i + 5]) {\n          attack();\n        } else {\n          attack();\n        }\n      } else if (state.results[i + 5]) {\n        attack();\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/store/reducers/table.js"],"names":["actionTypes","cardAttributes","initialState","results","allCards","cards","position","cardOpponent","attack","direction","attack1","attack2","reducer","state","action","type","newResults","newAllCards","id","val","newState","map","card","value","PIXEL","newAllCards1","i"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\n\nconst initialState = {\n    results: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n    allCards:{\n        cards:[{position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19}],\n        cardOpponent:[{position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19}]\n    }\n};\nconst attack =(direction,attack1,attack2)=>{\n    if(attack2){\n\n    }else{\n\n    }\n}\nconst reducer = ( state = initialState, action) => {\n\n    switch ( action.type ) {\n        case 'PLAY_THE_CARD':\n            const newResults={...state.results};\n            const newAllCards={...state.allCards}\n            newResults[action.id]=action.val;\n            newAllCards.cards[action.val].position=action.id;\n                return {...state,\n                    results:{...newResults},\n                    allCards:{...newAllCards},\n                }\n        case 'GIVEAWAYTHECARS':\n            const newState={...state.allCards};\n            newState.cards.map((card)=>{\n                card.position=30;\n                card.value={...cardAttributes.PIXEL};//do zmiany\n            });\n            newState.cardOpponent.map((card)=>{\n                card.position=30;\n            });\n            return{...state,\n                allCards:{...newState}};\n        case 'ENDTURN':\n            const newAllCards1={...state.allCards}\n            const i=0\n            if(state.results[i]){\n                if(state.results[i+5]){\n                    attack();\n                }else{\n                    attack();\n                }\n            }else\n            if(state.results[i+5]){\n                attack();\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}