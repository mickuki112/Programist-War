{"ast":null,"code":"var _jsxFileName = \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js\";\nimport React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nimport { connect } from 'react-redux';\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.game = {\n      hoverCard: false,\n      fieldPlayed: false //field:[false,false,false,false,false,false,false,false,false,false],\n\n    };\n\n    this.action = () => {\n      this.props.giveAwayTheCards();\n    };\n\n    this.playTheCard = id => {\n      this.game.fieldPlayed = id;\n      this.props.playTheCard(this.game.hoverCard, this.game.fieldPlayed);\n    };\n\n    this.endTur = () => {\n      this.props.endTurn();\n    };\n\n    this.hoverCard = id => {\n      this.game.hoverCard = id;\n    };\n\n    this.tableNuber = position => {\n      if (position < 5) return 5;else return 10;\n    };\n  }\n\n  render() {\n    const card = this.props.allCards.cards.map((counter, i) => {\n      const lenght = this.props.allCards.cards.length;\n      let styleCard = null;\n\n      if (counter.position == 30) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + (155 + math.abs(i - lenght / 2) * (70 / lenght)) + \"%,\" + (i + 30) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      } else if (counter.position >= 0 && 10 >= counter.position) {\n        styleCard = {\n          transform: \"translate3d(-\" + (326 + 76 * (this.tableNuber(counter.position) - counter.position)) + \"%,\" + (34 + (this.tableNuber(counter.position) - 5) * 11.5) + \"%,\" + (i + 5) + \"px) rotate(0deg) scale(0.5)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        valCards: counter.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    });\n    const cardOpponent = this.props.allCards.cardOpponent.map((counter, i) => {\n      const lenght = this.props.allCards.cardOpponent.length;\n      let styleCard = null;\n\n      if (counter.position == 30) {\n        styleCard = {\n          transform: \"translate3d(-\" + (i * (300 / lenght) + 400) + \"%,\" + (-160 - math.abs(i - lenght / 2) * (70 / lenght)) + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      if (counter.position >= 0 && 10 >= counter.position) {\n        styleCard = {\n          transform: \"translate3d(-\" + (-i * (300 / lenght) + 650) + \"%,\" + -300 + \"%,\" + (i + 5) + \"px) rotate(\" + (-30 + 60 / (lenght - 1) * i) + \"deg)\"\n        }; //do prawy Y i x\n      }\n\n      return React.createElement(Cards, {\n        clicked: () => {\n          this.hoverCard(i);\n        },\n        key: i,\n        stylesCard: styleCard,\n        valCards: counter.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.GameDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, cardOpponent, React.createElement(Table, {\n      clicked: this.playTheCard,\n      field: this.props.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), card, React.createElement(\"button\", {\n      onClick: this.action,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Start Game\"), React.createElement(\"button\", {\n      onClick: this.endTur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"endTur\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allCards: state.table.allCards,\n    results: state.table.results\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    playTheCard: (hoverCard, fieldPlayed) => dispatch({\n      type: 'PLAY_THE_CARD',\n      val: hoverCard,\n      id: fieldPlayed\n    }),\n    giveAwayTheCards: () => dispatch({\n      type: 'GIVEAWAYTHECARS'\n    }),\n    endTurn: () => dispatch({\n      type: 'ENDTURN'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Builder);","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/container/Game/Game.js"],"names":["React","Component","Cards","styles","math","Table","cardAttributes","connect","Builder","state","game","hoverCard","fieldPlayed","action","props","giveAwayTheCards","playTheCard","id","endTur","endTurn","tableNuber","position","render","card","allCards","cards","map","counter","i","lenght","length","styleCard","transform","abs","value","cardOpponent","GameDiv","results","mapStateToProps","table","mapDispatchToProps","dispatch","type","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Cards from '../../components/Game/Cards/Cards';\nimport styles from './Game.module.css';\nimport math from 'mathjs';\nimport Table from '../../components/Game/Table/Table';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nimport { connect } from 'react-redux';\n\n\nclass Builder extends Component{\n    state={\n\n    }\n    game={\n        hoverCard:false,\n        fieldPlayed:false,\n        //field:[false,false,false,false,false,false,false,false,false,false],\n    }\n    action=()=>{\n        this.props.giveAwayTheCards();\n    }\n    playTheCard=(id)=>{\n        this.game.fieldPlayed=id;\n        this.props.playTheCard(this.game.hoverCard,this.game.fieldPlayed);\n    }\n    endTur=()=>{\n        this.props.endTurn();\n    }\n    hoverCard=(id)=>{\n        this.game.hoverCard=id;\n    }\n    tableNuber=(position)=>{if(position<5)\n        return(5);\n    else\n        return(10);}\n    render(){\n        const card=this.props.allCards.cards.map((counter,i)=>{\n            const lenght=this.props.allCards.cards.length;\n            let styleCard=null;\n            if(counter.position==30){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(155+math.abs(i-lenght/2)*(70/lenght))+\"%,\"+(i+30)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }else\n            if(counter.position>=0 && 10>=counter.position){\n                styleCard={transform:\"translate3d(-\"+(326+76*(this.tableNuber(counter.position)-counter.position))+\"%,\"+(34+(this.tableNuber(counter.position)-5)*11.5)+\"%,\"+(i+5)+\"px) rotate(0deg) scale(0.5)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard} valCards={counter.value}/>\n        })\n\n\n        const cardOpponent=this.props.allCards.cardOpponent.map((counter,i)=>{\n            const lenght=this.props.allCards.cardOpponent.length;\n            let styleCard=null;\n            if(counter.position==30){\n                styleCard={transform:\"translate3d(-\"+(i*(300/lenght)+400)+\"%,\"+(-160-math.abs(i-lenght/2)*(70/lenght))+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            if(counter.position>=0 && 10>=counter.position){\n                styleCard={transform:\"translate3d(-\"+(-i*(300/lenght)+650)+\"%,\"+(-300)+\"%,\"+(i+5)+\"px) rotate(\"+(-30+(60/(lenght-1))*i)+\"deg)\",};//do prawy Y i x\n            }\n            return <Cards clicked={()=>{this.hoverCard(i)}} key={i} stylesCard={styleCard} valCards={counter.value}/>\n        })\n\n\n        return(\n            <div className={styles.GameDiv}>\n                {cardOpponent}\n            <Table clicked={this.playTheCard} field={this.props.results}/>\n                {card}\n                <button onClick={this.action}>Start Game</button>\n                <button onClick={this.endTur}>endTur</button>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        allCards: state.table.allCards,\n        results: state.table.results,\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        playTheCard: (hoverCard,fieldPlayed) => dispatch({type: 'PLAY_THE_CARD', val: hoverCard, id: fieldPlayed }),\n        giveAwayTheCards: () =>dispatch({type: 'GIVEAWAYTHECARS'}),\n        endTurn: () =>dispatch({type: 'ENDTURN'}),\n    }\n};\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(Builder);\n"]},"metadata":{},"sourceType":"module"}