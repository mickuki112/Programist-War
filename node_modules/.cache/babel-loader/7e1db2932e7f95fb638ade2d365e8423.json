{"ast":null,"code":"import _objectSpread from \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\nconst initialState = {\n  results: [false, false, false, false, false, false, false, false, false, false],\n  allCards: {\n    cards: [{\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }],\n    cardOpponent: [{\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }, {\n      position: 19\n    }]\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PLAY_THE_CARD':\n      const newState1 = _objectSpread({}, state);\n\n      newState1.results[action.id] = action.val;\n      newState1.allCards.cards[val].position = id;\n      return _objectSpread({}, state, newState);\n\n    case 'GIVEAWAYTHECARS':\n      const newState = _objectSpread({}, state.allCards);\n\n      newState.cards.map(card => {\n        card.position = 30;\n      });\n      newState.cardOpponent.map(card => {\n        card.position = 30;\n      });\n      return _objectSpread({}, state, {\n        allCards: _objectSpread({}, newState)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/programist-war/src/store/reducers/table.js"],"names":["actionTypes","cardAttributes","initialState","results","allCards","cards","position","cardOpponent","reducer","state","action","type","newState1","id","val","newState","map","card"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,OAAO,KAAKC,cAAZ,MAAgC,4CAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,CADQ;AAEjBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,KAAK,EAAC,CAAC;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAD,EACF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KADE,EAEF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAFE,EAGF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAHE,EAIF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAJE,EAKF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KALE,EAMF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KANE,EAOF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAPE,EAQF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KARE,EASF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KATE,EAUF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAVE,EAWF;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAXE,CADD;AAaLC,IAAAA,YAAY,EAAC,CAAC;AAACD,MAAAA,QAAQ,EAAC;AAAV,KAAD,EACT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KADS,EAET;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAFS,EAGT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAHS,EAIT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAJS,EAKT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KALS,EAMT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KANS,EAOT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAPS,EAQT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KARS,EAST;AAACA,MAAAA,QAAQ,EAAC;AAAV,KATS,EAUT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAVS,EAWT;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAXS;AAbR;AAFQ,CAArB;;AA8BA,MAAME,OAAO,GAAG,CAAEC,KAAK,GAAGP,YAAV,EAAwBQ,MAAxB,KAAmC;AAE/C,UAASA,MAAM,CAACC,IAAhB;AACI,SAAK,eAAL;AACI,YAAMC,SAAS,qBAAKH,KAAL,CAAf;;AACAG,MAAAA,SAAS,CAACT,OAAV,CAAkBO,MAAM,CAACG,EAAzB,IAA6BH,MAAM,CAACI,GAApC;AACAF,MAAAA,SAAS,CAACR,QAAV,CAAmBC,KAAnB,CAAyBS,GAAzB,EAA8BR,QAA9B,GAAuCO,EAAvC;AACI,+BAAWJ,KAAX,EACOM,QADP;;AAGR,SAAK,iBAAL;AACI,YAAMA,QAAQ,qBAAKN,KAAK,CAACL,QAAX,CAAd;;AACAW,MAAAA,QAAQ,CAACV,KAAT,CAAeW,GAAf,CAAoBC,IAAD,IAAQ;AACvBA,QAAAA,IAAI,CAACX,QAAL,GAAc,EAAd;AACH,OAFD;AAGAS,MAAAA,QAAQ,CAACR,YAAT,CAAsBS,GAAtB,CAA2BC,IAAD,IAAQ;AAC9BA,QAAAA,IAAI,CAACX,QAAL,GAAc,EAAd;AACH,OAFD;AAGA,+BAAUG,KAAV;AACIL,QAAAA,QAAQ,oBAAKW,QAAL;AADZ;;AAEJ;AACI,aAAON,KAAP;AAnBR;AAqBH,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\nimport * as cardAttributes from '../../components/Game/Cards/cardAttributes';\n\nconst initialState = {\n    results: [false,false,false,false,false,false,false,false,false,false],\n    allCards:{\n        cards:[{position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19}],\n        cardOpponent:[{position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19},\n            {position:19}]\n    }\n};\n\nconst reducer = ( state = initialState, action) => {\n\n    switch ( action.type ) {\n        case 'PLAY_THE_CARD':\n            const newState1={...state};\n            newState1.results[action.id]=action.val;\n            newState1.allCards.cards[val].position=id;\n                return {...state,\n                    ...newState,\n                }\n        case 'GIVEAWAYTHECARS':\n            const newState={...state.allCards};\n            newState.cards.map((card)=>{\n                card.position=30;\n            });\n            newState.cardOpponent.map((card)=>{\n                card.position=30;\n            });\n            return{...state,\n                allCards:{...newState}};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}